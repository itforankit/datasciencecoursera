install.packages("slidify")
install.packages("ggplot2")
library(ggplot2)
search()
?
version
installed.packages(kernsmooth)
install.packages("KernSmooth")
library(KernSmooth)
find_rtools()
find_Rtools()
find_rtools()
find rtools()
find Rtools()
installed.packages(devtools)
find.package("devtools")
install.packages(devtools)
install.packages("devtools")
library(devtools)
find_rtools()
find_rtools()
find_rtools()
exit
quit
getwd()
myfunction <- function()
{
x=rnorm(100)
mean(x)
}
Second<-function(x)
{
x=rnorm(length(x))
}
Second()
myfunction()
Second(4)
ls
ls
getwd()
ls
getwd()
ls()
Second(4)
myfunction <- function()
{
x=rnorm(100)
mean(x)
}
Second<-function(x)
{
rnorm(length(x))
}
Second(4)
Second(4)
Second(4)
Second(4)
rnorm(length(x))
Second<-function(x)
{
rnorm(length(x))
}
Second<-function(x)
{
rnorm(length(x))
}
ls()
getpwd()
getwd()
install.packages("swirl")
package_version("swirl")
packageVersion(swirl)
library(swirl)
packageVersion(swirl)
ls
ls()
rm(list=ls())
swirl()
install_from_swirl(R Programming)
install_from_swirl("R Programming")
swirl()
5+7
quit()
swirl("R Programming")
swirl
swirl()
library(swirl)
install_from_swirl("R Programming")
swirl()
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-(z-1)^2
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
x*2+100
x*2+1000
z*2+100
(z*2+100)
(z*2+1000)
(z*2+100)
(z*2+1000)
info()
play()
nxt()
nxt
nxt()
skip()
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
ars()
args()
list.files(R.home())
args(list.files)
skip()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename
file.rename("mytest.R","mytest2.R")
file.copy("mytest3.R")
file.copy("mytest3.R","mytest3.R")
file.copy("mytest2.R","mytest3.R")
getpwd()
getwd()
file.path("mytest3.R")
skip()
?dir
?dir.create
dir.create("testdir2")
dir.create(file.path('testdir2','testdir3'), recursive=TRUE)
dir.create(file.path('testdir4','testdir4.1','testdir4.2'), recursive=TRUE)
setwd(old.dir)
getpwd
getpwd()
getwd()
ls()
list.files()
swirl()
library("swirl")
swirl()
!FALSE
!(0>=-1)
9<10
7!=8
FALSE||TRUE&&FALSE
99.99>100||45<7.3||4!=4.0
TRUE&&FALSE||9>=4&&3<6
TRUE&&62<62&&44>=44
6 >= -9 && !(6 > 7) && !(!TRUE)
FALSE && 6 >= 6 || 7 >= 8 || 50 <= 49.5
isTRUE(3)
isTRUE(!TRUE)
!isTRUE(4 < 3)
xor(identical(xor, 'xor'), 7 == 7.0)
xor(4 >= 9, 8 != 8.0)
identical(xor, 'xor')
7 == 7.0
?coerce
getwd()
setwd("C:\Machine Learning\datasciencecoursera\Example1")
setwd("C:\\Machine Learning\\datasciencecoursera\\Example1")
getwd()
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(Andy$Day)
length(andy$Day)
class(andy)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[30,"weight"]
andy[30,"Weight"]
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day==30)
andy_s<-andy[1,"Weight"]
andy_E<-andy[30,"Weight"]
andy_loss<-andy_E-andy_s
andy_loss<-andy_s-andy_E
Files<-list.files("diet_data")
Files
Files[1]
Files[2:4]
head[read.csv(Files[2])]
Files_full<-list.files("diet_data", full.names = TRUE)
Files_full
head[read.csv(Files_full[2])]
head[read.csv(Files_full[2])]
head(read.csv(Files_full[2]))
andy_david <- rbind(andy, read.csv(files_full[2]))
andy
andy_david <- rbind(andy, read.csv(files_full[2]))
andy_david <- rbind(andy, read.csv(Files_full[2]))
andy_david
head[andy]
head(andy)
head(andy_david)
tail(andy_david)
days_25<-andy_david[which(andy_david$Day==25)]
days_25<-andy_david[which(andy_david$Day==25),]
days_25
length(Files_full)
dat<-data.frame()
for(i in 1:length(Files_full))
{
dat<-rbind(dat,read.csv(Files_full[i]))
}
str(dat)
meadian(dat)
meadian(dat$Weight)
median(dat$Weight)
median(dat$Weight,na.rm=FALSE)
median(dat$Weight,na.rm=TRUE)
dat_30<-dat[which(dat$Day==30]
dat_30<-dat(which(dat$Day==30)
dat_30<-dat(which(dat$Day)==30)
dat_30<-dat(which(dat$Day)==30,)
dat_30<-dat[which(dat$Day)==30,]
dat_30<-dat[which(dat$Day==30),]
dat_30
median(dat_30$Weight)
